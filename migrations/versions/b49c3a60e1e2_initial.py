"""initial

Revision ID: b49c3a60e1e2
Revises: 
Create Date: 2025-09-25 00:10:48.643713

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b49c3a60e1e2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('specialization', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('collection_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=80), nullable=True),
    sa.Column('estimated_value', sa.Float(), nullable=True),
    sa.Column('acquired_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('collection_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_collection_items_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_collection_items_user_id'), ['user_id'], unique=False)

    op.create_table('message_threads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_a_id', sa.Integer(), nullable=False),
    sa.Column('user_b_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_a_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_b_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_a_id', 'user_b_id', name='uq_thread_pair')
    )
    with op.batch_alter_table('message_threads', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_message_threads_user_a_id'), ['user_a_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_message_threads_user_b_id'), ['user_b_id'], unique=False)

    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('thread_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['thread_id'], ['message_threads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_messages_thread_id'), ['thread_id'], unique=False)

    op.create_table('price_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('series_json', sa.Text(), nullable=False),
    sa.Column('currency', sa.String(length=8), nullable=True),
    sa.Column('refreshed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['collection_items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('price_cache', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_price_cache_item_id'), ['item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_price_cache_refreshed_at'), ['refreshed_at'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('price_cache', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_price_cache_refreshed_at'))
        batch_op.drop_index(batch_op.f('ix_price_cache_item_id'))

    op.drop_table('price_cache')
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_thread_id'))

    op.drop_table('messages')
    with op.batch_alter_table('message_threads', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_message_threads_user_b_id'))
        batch_op.drop_index(batch_op.f('ix_message_threads_user_a_id'))

    op.drop_table('message_threads')
    with op.batch_alter_table('collection_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_collection_items_user_id'))
        batch_op.drop_index(batch_op.f('ix_collection_items_category'))

    op.drop_table('collection_items')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
